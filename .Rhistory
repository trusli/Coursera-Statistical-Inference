demo()
getwed()
getwd()
read.csv("mydata.csv")
getwd()
getwd()
getwd()
x <- 4L
class(x)
x
x <- c(4,TRUE)
class(x)
x <-c(1,3,5)
y<-c(3,2,10)
cbind(x,y)
x<-list(2,"a","b",true)
x<-list(2,"a","b",TRUE)
x
class(x)
x[[2]]
x<-1:4
y<-2:3
x+y
x<-c(17,14,4,5,13,12,10)
x
x[x==4]>10
x
x[x>=11] <-4
x
getwd()
dfall <- merge(dfgd,dfedu, by = intersect(X,CountryCode))
fileURLgdp <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileURLgdp, destfile = "gdp.csv")
dfgd <- read.csv("gdp.csv",skip=4)
fileURLedu <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileURLedu, destfile = "edu.csv")
dfedu <- read.csv("edu.csv")
dfall <- merge(dfgd,dfedu, by = intersect(X,CountryCode))
View(dfedu)
View(dfgd)
dfall <- merge(dfgd,dfedu, by = intersect("X","CountryCode"))
View(dfall)
dfall <- merge(dfgd,dfedu, by = c("CountryCode"))
dfall <- merge(dfgd,dfedu, by = c("X"))
dfall <- merge(dfgd,dfedu, by = "X")
dfall <- merge(dfgd,dfedu, by.x = "X")
dfall <- merge(dfgd,dfedu, all=TRUE,by.x = "X")
dfall <- merge(dfgd,dfedu, all.x =TRUE,by.x = "X")
dfall <- merge(dfgd,dfedu, all=TRUE, by.x="X")
dfall <- merge(dfgd,dfedu, all=TRUE, by.x="X", by.y="CountryCode")
dfall <- merge(dfgd,dfedu, all.x=TRUE, by.x="X", by.y="CountryCode")
View(dfall)
dfall <- merge(dfgd,dfedu, all.y=TRUE, by.x="X", by.y="CountryCode")
View(dfall)
isJune <- grep("Fiscal Year end June", dfall$Special.Notes)
isJune <- grep("June", dfall$Special.Notes)
isJune <- grepl("June", dfall$Special.Notes)
dfall[X="AUT"]
dfall[dfall$X="AUT"]
data.frame(dfall$X="AUT")
dfall[x]
dfall[,x]
dfall[[x]]
dfall[[X]]
dfall[["X"]]
dfall[["X"="AUT"]]
dfall$X
dfall$X="USA"
dfall$X
dfall <- merge(dfgd,dfedu, all.y=TRUE, by.x="X", by.y="CountryCode")
dfall$X
isJune <- grep("June", dfall$Special.Notes)
isJune <- grep("fiscal year end.june", dfall$Special.Notes)
isJune <- grep("fiscal year end.june", to.lower(dfall$Special.Notes))
isJune <- grep("fiscal year end.june", tolower(dfall$Special.Notes))
isJune <- grep("fiscal year end"."june", tolower(dfall$Special.Notes))
isJune <- grep("fiscal year end\.june", tolower(dfall$Special.Notes))
isJune <- grep(fiscal year end\.june, tolower(dfall$Special.Notes))
isJune <- grep("fiscal year end", tolower(dfall$Special.Notes))
dfall$Special.notes
dfall$Special.Notes
isFiscalYear <- grep("fiscal year end", tolower(dfall$Special.Notes))
isJune<- grep("fiscal year end", tolower(dfall$Special.Notes))
isJune<- grep("june", tolower(dfall$Special.Notes))
table(isFiscalYear,isJune)
isFiscalYear
isJune
isboth <- grep("(\W|^)(fiscal|year|end|june)(\W|$)", tolower(dfall$Special.Notes))
isboth <- grep("fiscal|year|end|june", tolower(dfall$Special.Notes))
isboth <- grep("fiscal year end.june", tolower(dfall$Special.Notes))
isboth <- grep("fiscal year end\b.june", tolower(dfall$Special.Notes))
isboth <- grep("fiscal year end\b", tolower(dfall$Special.Notes))
isboth <- grep("fiscal year end\b", tolower(dfall$Special.Notes))
isboth <- grep("\bfiscal year end\b", tolower(dfall$Special.Notes))
isboth <- grep("\bfiscal\b", tolower(dfall$Special.Notes))
isboth <- grep("fiscal", tolower(dfall$Special.Notes))
isFiscalYear <- grep("fiscal year end", tolower(dfall$Special.Notes))
isboth <- grep("\bfiscal", tolower(dfall$Special.Notes))
isboth <- grep(\bfiscal\b, tolower(dfall$Special.Notes))
isboth <- grep("(\bfiscal\b)", tolower(dfall$Special.Notes))
isJune<- grep("june", ignore.case=TRUE,(dfall$Special.Notes))
isJune<- grep("june", ignore.case=FALSE,(dfall$Special.Notes))
setnames(df, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "countryNames", "GDP"))
isJune<- grep("june", ignore.case=TRUE,(dfall$Special.Notes))
isboth <- grep("(\bfiscal\b)", ignore.case=TRUE,(dfall$Special.Notes))
isboth <- grep("(\bfiscal\b)", ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
isboth <- grep("\bfiscal\b", ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
isboth <- grep(\bfiscal\b, ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
isboth <- grep("\bfiscal", ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
isboth <- grep("\\bfiscal", ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
isboth <- grep("\\bfiscal\\b", ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
isboth <- grep("\\bfiscal year end\\b", ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
isboth <- grep("\\bfiscal year end\\b.\bjune\b", ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
isboth <- grep("\\bfiscal year end\\b.\\bjune\\b", ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
isboth <- grep("\\bfiscal year end\\b", ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
isboth <- grep("\\bfiscal year end\\b\.", ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
isboth <- grep("\\bfiscal year end\\b\.\bjune\b", ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
------------------Question 5-------------------------
isboth <- grep("\\bfiscal year end\\b\.\bjune\b", ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
isboth <- grep("\\bfiscal year end\\b\.", ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
isboth <- grep("\\bfiscal year end\\b\\.", ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
isboth <- grep("\\bfiscal year end\\b", ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
isFiscalYear
isJune
isboth <- grep("\\bfiscal year end\\b.*?\\bjune\\b", ignore.case=TRUE,(dfall$Special.Notes),perl=TRUE)
isboth
dfall$Special.Note[isboth]
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
class(sampleTimes)
addmargins(table(year(sampleTimes), weekdays(sampleTimes)))
library(lubridate)
install.packages("lubridate")
library(lubridate)
addmargins(table(year(sampleTimes), weekdays(sampleTimes)))
year(sampeTimes)
year(sampleTimes)
table(year(sampleTimes), weekdays(sampleTimes))
weekdays(sampleTimes)
table(year(sampleTimes), weekdays(sampleTimes))
addmargins(table(year(sampleTimes), weekdays(sampleTimes)))
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
sum (x * p)^2 - sum (x^2*p)
sum (x^2*p) - sum (x * p)^2
sum (x*p)
qplot(votes, rating, data = movies, panel = panel.loess)
setwd("~/GitHub/Coursera-Statistical-Inference")
library(ggplot2)
lambda <- 0.2
n <- 40
simNumber <- 1000
set.seed(888)
sampleMean <- sapply(simNumber, mean(reexp(n,lambda)))
sampleMean <- sapply(simNumber, mean(rexp(n,lambda)))
sampleMean <- sapply(simNumber,
function(i) {
mean(rexp(n,lambda))
}
)
simMean <- mean(sampleMean)
trueMean <- 1/lambda
rexp(n,rate = lambda)
sampleMean <- data.frame(sapply(simNumber,
function(i) {
mean(rexp(n,rate = lambda))
}
)
sampleMean <- data.frame(sapply(simNumber,
function(i) {
mean(rexp(n,rate = lambda))
}
)
)
sampleMean <- data.frame(sapply(simNumber,
function(i) {
mean(rexp(n,rate = lambda))
}
)
)
View(sampleMean)
View(sampleMean)
sampleMean <- data.frame(x = sapply(simNumber,
function(i) {
mean(rexp(n,rate = lambda))
}
)
)
means <- data.frame(x = sapply(nsms, function(x) {mean(rexp(n, lambda))}))
lambda = 0.2
n = 40
nsms = 1:1000
set.seed(820)
means <- data.frame(x = sapply(nsms, function(x) {mean(rexp(n, lambda))}))
lambda <- 0.2
n <- 40
simNumber <- 1:1000
set.seed(888)
sampleMean <- data.frame(x = sapply(simNumber,
function(x) {
mean(rexp(n,rate = lambda))
}
)
)
View(sampleMean)
View(sampleMean)
simMean <- mean(sampleMean)
simMean <- mean(sampleMean$x)
trueMean <- 1/lambda
simVar <- var(sampleMean$x)
trueVar <- ((1/lambda)/sqrt(n))^2
ggplot(data = sampleMean, aes(x = x)) +
geom_histogram(aes(y=..density..), fill = I('#00e6fa'),
binwidth = 0.20, color = I('black')) +
stat_function(fun = dnorm, arg = list(mean = 5, sd = sd(means$x)))
ggplot(data = sampleMean, aes(x = x)) +
geom_histogram(aes(y=..density..), fill = I('#00e7fa'),
binwidth = 0.20, color = I('black')) +
stat_function(fun = dnorm, arg = list(mean = 5, sd = sd(means$x)))
ggplot(data = sampleMean, aes(x = x)) +
geom_histogram(aes(y=..density..), fill = I('#0ae7fa'),
binwidth = 0.20, color = I('black')) +
stat_function(fun = dnorm, arg = list(mean = 5, sd = sd(means$x)))
ggplot(data = sampleMean, aes(x = x)) +
geom_histogram(aes(y=..density..), fill = I('#0ae7fa'),
binwidth = 0.10, color = I('black')) +
stat_function(fun = dnorm, arg = list(mean = 5, sd = sd(means$x)))
ggplot(data = sampleMean, aes(x = x)) +
geom_histogram(aes(y=..density..),
binwidth = 0.10, color = I('black')) +
stat_function(fun = dnorm, arg = list(mean = 5, sd = sd(means$x)))
ggplot(data = sampleMean, aes(x = x)) +
geom_histogram(aes(y=..density..),
binwidth = 0.10, color = I('black')) +
stat_function(fun = dnorm, arg = list(mean = 5, sd = sd(sampleMean$x)))
